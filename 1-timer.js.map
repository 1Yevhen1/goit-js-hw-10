{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst buttonStart = document.querySelector(\"[data-start]\");\nconst daysEl = document.querySelector(\"[data-days]\");\nconst hoursEl = document.querySelector(\"[data-hours]\");\nconst minutesEl = document.querySelector(\"[data-minutes]\");\nconst secondsEl = document.querySelector(\"[data-seconds]\");\n\n// Функція для додавання нуля спереду\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nflatpickr(input, {\n  enableTime: true,\n  dateFormat: \"Y-m-d H:i\",\n  onClose(selectedDates) {\n    const selectedTime = selectedDates[0].getTime();\n    if (selectedTime <= Date.now()) {\n      buttonStart.disabled = true;\n      alert(\"Please choose a date in the future\"); // повідомлення\n    } else {\n      buttonStart.disabled = false;\n    }\n  },\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Оновлення інтерфейсу\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nconst timer = {\n  intervalId: null,\n  start() {\n    const targetTime = Date.parse(input.value);\n    if (this.intervalId) return;\n\n    buttonStart.disabled = true;\n\n    this.intervalId = setInterval(() => {\n      const deltaTime = targetTime - Date.now();\n      if (deltaTime <= 0) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n        updateClockface(convertMs(0));\n        return;\n      }\n      updateClockface(convertMs(deltaTime));\n    }, 1000);\n  },\n};\n\nbuttonStart.addEventListener(\"click\", () => {\n  timer.start();\n});"],"names":["input","buttonStart","daysEl","hoursEl","minutesEl","secondsEl","addLeadingZero","value","flatpickr","selectedDates","convertMs","ms","days","hours","minutes","seconds","updateClockface","timer","targetTime","deltaTime"],"mappings":"wIAGA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAGzD,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAC,EAAUR,EAAO,CACf,WAAY,GACZ,WAAY,YACZ,QAAQS,EAAe,CACAA,EAAc,CAAC,EAAE,QAAO,GACzB,KAAK,OACvBR,EAAY,SAAW,GACvB,MAAM,oCAAoC,GAE1CA,EAAY,SAAW,EAE1B,CACH,CAAC,EAED,SAASS,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAgB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1Db,EAAO,YAAcI,EAAeM,CAAI,EACxCT,EAAQ,YAAcG,EAAeO,CAAK,EAC1CT,EAAU,YAAcE,EAAeQ,CAAO,EAC9CT,EAAU,YAAcC,EAAeS,CAAO,CAChD,CAEA,MAAME,EAAQ,CACZ,WAAY,KACZ,OAAQ,CACN,MAAMC,EAAa,KAAK,MAAMlB,EAAM,KAAK,EACrC,KAAK,aAETC,EAAY,SAAW,GAEvB,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMkB,EAAYD,EAAa,KAAK,IAAG,EACvC,GAAIC,GAAa,EAAG,CAClB,cAAc,KAAK,UAAU,EAC7B,KAAK,WAAa,KAClBH,EAAgBN,EAAU,CAAC,CAAC,EAC5B,MACD,CACDM,EAAgBN,EAAUS,CAAS,CAAC,CACrC,EAAE,GAAI,EACR,CACH,EAEAlB,EAAY,iBAAiB,QAAS,IAAM,CAC1CgB,EAAM,MAAK,CACb,CAAC"}